{"version":3,"sources":["Components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["List","_ref","items","react_default","a","createElement","className","map","item","i","key","href","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeURL","event","setState","url","target","value","changePassword","password","handleTorrent","fetch","method","body","JSON","stringify","state","headers","Content-Type","then","res","json","files","list","magnetSubmit","console","log","catch","error","handleMagnet","e","preventDefault","handleElse","_this2","id","align","onSubmit","substring","action","onChange","type","name","required","placeholder","Home_List","Component","trigger","document","querySelector","HashRouter","Switch","Route","path","component","Home_Home","exact","style","textAlign","paddingTop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","getElementById","URL","process","origin","addEventListener","concat","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4ba90ede.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Home.css';\r\n\r\n\r\nconst List = ({ items }) => (\r\n  <ul className=\"ulist\">\r\n    <ul className=\"vlist\">\r\n      {\r\n        items.map((item, i) => <li key={i} className=\"litem\"><a className=\"link\" href={\"https://flai-api.herokuapp.com/torrent/\"+ item}>{item}</a></li>)\r\n      }\r\n    </ul>\r\n  </ul>\r\n  );\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      list: 0,\r\n      files: [],\r\n      url: '',\r\n      password: '',\r\n      magnetSubmit: 0\r\n    }\r\n  }\r\n\r\n  changeURL = (event) => {\r\n    this.setState({url: event.target.value});\r\n  }\r\n\r\n  changePassword = (event) => {\r\n    this.setState({password: event.target.value});\r\n  }\r\n\r\n\r\n  handleTorrent = () => {\r\n    fetch('https://flai-api.herokuapp.com/metadata', {\r\n          method: \"POST\",\r\n          body: JSON.stringify({url: this.state.url, password: this.state.password}),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }})\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          if(res)\r\n            this.setState({files: res, list: 1, magnetSubmit: 0});\r\n          else {\r\n            this.setState({magnetSubmit: 2});\r\n            console.log(\"Vanilla Error\");\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.setState({magnetSubmit: 2});\r\n          console.error('Error:', error);\r\n        });\r\n  }\r\n\r\n  handleMagnet = (e) => {\r\n    e.preventDefault();\r\n    this.setState({list: 0, magnetSubmit: 1});\r\n  }\r\n\r\n  handleElse = (e) => {\r\n    this.setState({list: 0})\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(this.state.magnetSubmit === 1) {\r\n      this.handleTorrent();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"home\" className=\"container\">\r\n        <h3 id=\"u1\">Welcome To fl<span id=\"u11\">ai</span> Downloads</h3>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\" align=\"center\">\r\n            <form onSubmit={e => this.state.url.substring(0, 6)===\"magnet\"?this.handleMagnet(e):this.handleElse(e)} method=\"post\" action=\"https://flai-api.herokuapp.com/download\" >\r\n              <div className=\"form-group\">\r\n                <input onChange={(e) => this.changeURL(e)}\r\n                 type=\"text\" name=\"user[url]\" required className=\"form-control\" placeholder=\"Downloadable URL | Magnet URI\" id=\"u2\" />\r\n                <input onChange={(e) => this.changePassword(e)}\r\n                 type=\"password\" name=\"user[password]\" required className=\"form-control\" placeholder=\"Password\" id=\"u3\" />\r\n                 <p/>\r\n                <button id=\"buttonS\" type=\"submit\" className=\"btn btn-danger btn-lg\">Download</button>\r\n              </div>\r\n            </form>\r\n\r\n            {\r\n              this.state.magnetSubmit === 1\r\n              ?\r\n              <div className=\"lds-hourglass\"></div>\r\n              :\r\n              (this.state.magnetSubmit === 0? <div></div>: <div className=\"error\">Oops! Something went wrong.</div>)\r\n            }\r\n            { this.state.list? <List items={this.state.files} />: '' }\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","//Warning - Keep Homepage undefined for gh-pages issue in packages.json fiel\r\nimport React, { Component } from 'react';\r\nimport Home from './Components/Home/Home.js'\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  trigger = () => {\r\n    document.querySelector('#u2').value = '';\r\n    document.querySelector('#u3').value = '';\r\n    document.querySelector('#u4').value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route path='/' component={() => { return( <Home trigger={this.trigger} /> ) } } exact />\r\n          <Route component={() => { return (<h1 style={{ textAlign: 'center', paddingTop: '40vh' }}>Error 404: Not Found!</h1>) }} />\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n/*const debug =\r\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();*/\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n/// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n\r\n"],"sourceRoot":""}